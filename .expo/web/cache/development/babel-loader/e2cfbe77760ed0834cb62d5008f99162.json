{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\JF Startup Studio\\\\Projetos React Native\\\\BuscarCEP\\\\src\\\\pages\\\\home\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      cep: null,\n      visible: true\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"BuscarCep\",\n    value: function BuscarCep() {\n      var _this2 = this;\n\n      var url = \"https://viacep.com.br/ws/\";\n      url = url + this.state.cep + \"/json/\";\n      fetch(url).then(function (resposta) {\n        return resposta.json();\n      }).then(function (dados) {\n        _this2.setState({\n          data: dados\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state$data,\n          _this$state$data2,\n          _this$state$data3,\n          _this$state$data4,\n          _this$state$data5;\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.textoheader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, \"Buscar CEP\")), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: require(\"../../assets/images/icone-roxo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputCep,\n        placeholder: \"Digite o seu CEP\",\n        onChangeText: function onChangeText(cep) {\n          return _this3.setState({\n            cep: cep\n          });\n        },\n        keyboardType: \"numeric\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.BuscarCep();\n        },\n        style: styles.botaobuscar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.botaotexto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, \"Buscar CEP\")), React.createElement(View, {\n        style: styles.dados,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"Cep: \", (_this$state$data = this.state.data) == null ? void 0 : _this$state$data.cep), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"Rua/Av: \", (_this$state$data2 = this.state.data) == null ? void 0 : _this$state$data2.logradouro), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"Bairro: \", (_this$state$data3 = this.state.data) == null ? void 0 : _this$state$data3.bairro), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"Localidade: \", (_this$state$data4 = this.state.data) == null ? void 0 : _this$state$data4.localidade, \"-\", (_this$state$data5 = this.state.data) == null ? void 0 : _this$state$data5.uf)))));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default index;","map":{"version":3,"sources":["C:/Users/JF Startup Studio/Projetos React Native/BuscarCEP/src/pages/home/index.js"],"names":["React","Component","styles","index","props","state","data","cep","visible","url","fetch","then","resposta","json","dados","setState","header","textoheader","container","logo","require","inputCep","BuscarCep","botaobuscar","botaotexto","logradouro","bairro","localidade","uf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ScrollView, Image } from 'react-native';\r\nimport styles from './styles';\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        data: [],\r\n        cep: null,\r\n        visible: true,\r\n    };\r\n  }\r\n\r\n  BuscarCep(){\r\n    let url = \"https://viacep.com.br/ws/\";\r\n    url = url + this.state.cep + \"/json/\";\r\n    fetch(url)\r\n      .then((resposta)=>resposta.json())\r\n      .then((dados)=>{\r\n        this.setState({\r\n          data: dados,\r\n        });\r\n      });\r\n      \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <View style={styles.header}>\r\n        <Text style={styles.textoheader}>Buscar CEP</Text>\r\n      </View>\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <Image style={styles.logo} source={require('../../assets/images/icone-roxo.png')}/>\r\n          <TextInput style={styles.inputCep} placeholder={\"Digite o seu CEP\"} onChangeText={cep => this.setState({cep: cep})} keyboardType={\"numeric\"} ></TextInput>\r\n          <TouchableOpacity onPress={()=>{\r\n            this.BuscarCep();\r\n          }} style={styles.botaobuscar}>\r\n            <Text style={styles.botaotexto}>Buscar CEP</Text>\r\n          </TouchableOpacity>\r\n          <View style={styles.dados}>\r\n            <Text>Cep: {this.state.data?.cep}</Text>\r\n            <Text>Rua/Av: {this.state.data?.logradouro}</Text>\r\n            <Text>Bairro: {this.state.data?.bairro}</Text>\r\n            <Text>Localidade: {this.state.data?.localidade}-{this.state.data?.uf}</Text>\r\n          </View>\r\n        </View>\r\n        \r\n      </ScrollView>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}